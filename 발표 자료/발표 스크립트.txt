1 페이지
안녕하세요, C202 발표자를 맡은 조현철입니다. 발표 시작하겠습니다.
저희는 도메인으로 블록체인을 선택하였고 이를 기반으로한 온라인 거래플랫폼인 싸코인을 제작하게 되었습니다.

싸코인에 대한 자세한 소개에 앞서 싸코인을 주제로한 UCC를 시청하시겠습니다.

(UCC끝나고)

여기까지가 싸코인 UCC였습니다.
이어서 본격적으로 발표 시작 하겠습니다.

2페이지
먼저 이번 발표의 목차입니다.

어떻게 싸코인을 만들게 되었는지에 대한 개발 동기
이번에 적용하게된 블록체인 기술,
저희가 주로 만든 기능들,
저희 팀의 개발 환경,
시연,
Q&A 순으로 진행하겠습니다.

3페이지
첫번째로 개발 동기입니다.

4페이지
UCC에서 보셨듯이, 일정 금액의 마일리지를 채우지 못하는 경우 사용할 수 없고,
원하지 않는 기프티콘을 받는 경우가 있습니다.
이러한 불편함을 해결 하기 위해
쿠폰샵, P2P 중고 거래, 쿠폰 관리 서비스를 제공하는 블록체인 기프티콘 거래 플랫폼입니다.
블록체인을 사용한 이유는 P2P 중고 거래에서 중앙 관리자 없이 사용자 간의 거래가 진행함으로써 
중간 관리자에 의한 사기 및 위조를 방지할 수 있습니다.

5페이지
다음은 저희가 사용한 블록체인 기술에 대해 설명하겠습니다.

6페이지
저희 프로젝트는 블록체인 기술 중에서 스마트 컨트랙트를 활용하여 거래 서비스를 제공했습니다.
스마트 컨트랙트 란? 계약 내용과 실행 조건을 컴퓨터 코드로 사전에 설정하며
해당 조건이 충족될 때 자동으로 계약이 집행됩니다.
저희 프로젝트에서 스마트 컨트랙트는 주로 쿠폰 구매 및 중고 거래에서 사용되고 있으며, 
구매자가 쿠폰 구매에 대한 요청 및 충분한 코인을 지불하면, 스마트 컨트랙트에 맞게 계약이 성사됩니다. 

7페이지
저희가 스마트 컨트랙트로 수행한 일중에 첫번째는
ERC20 토큰의 발행입니다.
저희가 계획한 수량을 발행하기 위해서 기존의 이더 대신 채택하였고 
일반적인 거래 외의 특수한 목적이 따로 없기 때문에 다른 erc 토큰을 선택하지 않고 
ERC20토큰을 발행했습니다.
이것을 SSA코인으로 명명하였고 마일리지로 사용할수 있게 만들었습니다.

8페이지
다음은 스마트 컨트랙트 배포를 통한 트랜잭션을 적용한 사례입니다.

첫번째는 기프티콘 샵에서의 구매입니다.
기프티콘 샵에서 구매를 할때 관리자가 이를 승인하도록 되어있는데 
관리자가 승인하는 과정에서 트랜잭션을 발생시켜 
구매자에서 관리자로 싸코인을 이동 할 수 있게 만들었습니다.

두번째는 중고 거래에서의 구매입니다.
매물로 올려진 상품을 구매할 때, 트랜잭션을 발생시켜 
구매자에서 판매자로 싸코인을 이동 할 수 있게 만들었습니다.

이외에 트랜잭션을 사용한 경우는
관리자가 일반 유저에게 마일리지를 주는 경우가 있습니다.

9페이지
다음은 주요 기능입니다.

10페이지
저희는 기능을 크게 쿠폰 샵을 이용하는 일반 유저와 
관리자로 역할을 나눠서 진행했습니다.

11페이지
각각 역할에 맞는 기능을 얘기하기에 앞서서
공통적으로 수행하는 로그인이나 회원가입에서의 특이점을 말씀드리겠습니다.
저희는 로그인을 스프링시큐리티와 jwt 토큰, redis를 이용해서 만들었습니다.
여기서 redis는 refresh토큰을 담기 위해서 사용하였습니다.

12페이지
다음은 일반적인 유저가 사용할 기능입니다.
유저는 마이페이지, 중고거래, 구매 요청을 이용할 수 있습니다.
첫번째로 마이페이지에서는 자신의 마일리지, 보유한 쿠폰, 그리고 거래 내역을 확인할 수 있습니다.
두번째로 중고거래에서는 상품을 등록하고 구매 할 수 있습니다.
마지막 공식 쿠폰샵에서 관리자에게 쿠폰 구매를 요청 할 수 있습니다.

13페이지
다음은 관리자의 주요 기능입니다.
관리자는 기프티콘 발급 및 마일리지를 지급할 수 있습니다.
첫번째로 기프티콘 발급의 경우, 유저가 관리자에게 구매 요청한 기프티콘을 발급해줄 수 있습니다.
두번째로 마일리지 지급의 경우, 기존에 마일리지를 지급하듯이 싸코인을 줄 수 가 있습니다. 

14페이지
다음은 저희 팀의 개발 환경입니다.

15페이지
저희는 aws상에 nginx 서버를 기반으로 프론트와 백엔드를 배포하였습니다.
프론트에서는 리액트 프레임워크를 사용하였고
백엔드는 스프링 부트를 사용하였습니다.
데이터베이스 같은 경우에는 도커상에서 마리아 디비와 레디스를 배포하였습니다.
또한 CI / CD를 위해 젠킨스를 배포 했습니다.
그리고 블록체인 기술을 사용하기 위해 geth네트워크를 구축하였으며
두 개의 노드상에서 서로 간의 피어를 연결하여 사용했습니다.
블록체인 네트워크가 여러 개의 노드를 기반으로 사용한다는 조언을 통해서 노드를 복수로 사용하고 있습니다.


16페이지
다음으로는 저희 서비스 시연을 진행하겠습니다.
시연은 최성은 팀원이 진행하도록 하겠습니다.

